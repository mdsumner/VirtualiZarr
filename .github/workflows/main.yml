name: CI

on:
  push:
    branches: [ "main" ]
    paths-ignore:
    - 'docs/**'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
    - 'docs/**'
  schedule:
    - cron: "0 0 * * *"
env:
  UV_HTTP_TIMEOUT: 500

jobs:

  test:
    name: ${{ matrix.python-version }}-build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv venv .venv
          # echo "VIRTUAL_ENV=.venv" >> $GITHUB_ENV

      - name: Install virtualizarr
        run: |
           uv pip install --system '.'
           uv pip install --system '.[test]'

      - name: Running Tests
        run: |
          python -m pytest ./virtualizarr --run-network-tests --cov=./ --cov-report=xml --verbose

      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v3.1.4
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
